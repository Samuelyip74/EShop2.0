{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Samuel\\\\Envs\\\\eshop\\\\frontend\\\\eshop-reactjs\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useEffect, getSize } from 'react';\nexport default function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  function getSize() {\n    return {\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined\n    };\n  }\n\n  const _useState = useState(getSize),\n        _useState2 = _slicedToArray(_useState, 2),\n        windowSize = _useState2[0],\n        setWindowSize = _useState2[1];\n\n  useEffect(() => {\n    if (!isClient) {\n      return false;\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}","map":{"version":3,"sources":["C:/Users/Samuel/Envs/eshop/frontend/eshop-reactjs/src/components/use-window-size.js"],"names":["useState","useEffect","getSize","useWindowSize","isClient","window","width","innerWidth","undefined","height","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,OAA9B,QAA6C,OAA7C;AAEA,eAAe,SAASC,aAAT,GAAyB;AACtC,QAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,QAAnC;;AAEA,WAASH,OAAT,GAAmB;AACjB,WAAO;AACLI,MAAAA,KAAK,EAAEF,QAAQ,GAAGC,MAAM,CAACE,UAAV,GAAuBC,SADjC;AAELC,MAAAA,MAAM,EAAEL,QAAQ,GAAGC,MAAM,CAACK,WAAV,GAAwBF;AAFnC,KAAP;AAID;;AARqC,oBAUFR,QAAQ,CAACE,OAAD,CAVN;AAAA;AAAA,QAU/BS,UAV+B;AAAA,QAUnBC,aAVmB;;AAYtCX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACG,QAAL,EAAe;AACb,aAAO,KAAP;AACD;;AAED,aAASS,YAAT,GAAwB;AACtBD,MAAAA,aAAa,CAACV,OAAO,EAAR,CAAb;AACD;;AAEDG,IAAAA,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMR,MAAM,CAACU,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GAXQ,EAWN,EAXM,CAAT,CAZsC,CAuB9B;;AAER,SAAOF,UAAP;AACD","sourcesContent":["import { useState, useEffect, getSize } from 'react';\r\n\r\nexport default function useWindowSize() {\r\n  const isClient = typeof window === 'object';\r\n\r\n  function getSize() {\r\n    return {\r\n      width: isClient ? window.innerWidth : undefined,\r\n      height: isClient ? window.innerHeight : undefined\r\n    };\r\n  }\r\n\r\n  const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n  useEffect(() => {\r\n    if (!isClient) {\r\n      return false;\r\n    }\r\n\r\n    function handleResize() {\r\n      setWindowSize(getSize());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n  return windowSize;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}